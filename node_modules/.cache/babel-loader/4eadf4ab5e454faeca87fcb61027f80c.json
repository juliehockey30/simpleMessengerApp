{"ast":null,"code":"import _classCallCheck from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/julieneuburger/Desktop/simple-messenger-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport firebase from 'firebase';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      text: '',\n      messages: [],\n      loading: true\n    };\n    _this.sendMessageOnClick = _this.sendMessageOnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var firebaseConfig = {\n        apiKey: \"AIzaSyBK9N_gyWYyfoR4sAzHdG3fT6gYKBShzZg\",\n        authDomain: \"simple-messenger-app-jn31.firebaseapp.com\",\n        databaseURL: \"https://simple-messenger-app-jn31.firebaseio.com\",\n        projectId: \"simple-messenger-app-jn31\",\n        storageBucket: \"simple-messenger-app-jn31.appspot.com\",\n        messagingSenderId: \"431275063574\",\n        appId: \"1:431275063574:web:122d40eb61b9180033b837\"\n      };\n      firebase.initializeApp(firebaseConfig);\n      this.getMessagesFromFirebase();\n    }\n  }, {\n    key: \"sendMessageOnClick\",\n    value: function sendMessageOnClick(event) {\n      event.preventDefault();\n\n      if (this.state.text.length > 0) {\n        this.sendMessageToFirebase(this.state.text);\n        this.setState({\n          text: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"sendMessageToFirebase\",\n    value: function sendMessageToFirebase(message) {\n      firebase.database().ref(\"messages/\").push({\n        text: message\n      });\n    }\n  }, {\n    key: \"getMessagesFromFirebase\",\n    value: function getMessagesFromFirebase() {\n      var _this2 = this;\n\n      // debugger\n      var messagesDB = firebase.database().ref(\"messages/\");\n      messagesDB.on(\"value\", function (snapshot) {\n        console.log(\"did I even get in here??? \", snapshot.val());\n        var snapshotValues = snapshot.val();\n        console.log(\"Snapshot values?? \", snapshotValues);\n        var snapshotValuesArray = Object.entries(snapshotValues);\n        console.log(\"Am I an array now?? \", snapshotValuesArray);\n        var newMessages = [];\n        snapshotValuesArray.forEach(function (child) {\n          console.log(\"what is my child??? \", child[1]);\n          var message = \"\";\n          newMessages.push({\n            id: child.key,\n            text: message.text\n          });\n        });\n\n        _this2.setState({\n          messages: newMessages\n        }, function () {\n          _this2.setState({\n            loading: false\n          });\n        });\n      });\n    }\n  }, {\n    key: \"renderMessages\",\n    value: function renderMessages() {\n      this.state.messages.map(function (message) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, message.text);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"I am loading\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderMessages), React.createElement(\"input\", {\n        autoFocus: true,\n        multiline: true,\n        fullWidth: true,\n        rowsMax: 3,\n        placeholder: \"say something...\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            text: event.target.value\n          });\n        },\n        value: this.state.text,\n        onKeyPress: this.submit,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.sendMessageOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"SEND\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/julieneuburger/Desktop/simple-messenger-app/src/App.js"],"names":["React","Component","firebase","App","props","state","text","messages","loading","sendMessageOnClick","bind","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","getMessagesFromFirebase","event","preventDefault","length","sendMessageToFirebase","setState","message","database","ref","push","messagesDB","on","snapshot","console","log","val","snapshotValues","snapshotValuesArray","Object","entries","newMessages","forEach","child","id","key","map","renderMessages","target","value","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport firebase from 'firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: '',\n      messages: [],\n      loading: true\n    }\n\n    this.sendMessageOnClick = this.sendMessageOnClick.bind(this);\n  }\n\n  componentDidMount() {\n    var firebaseConfig = {\n      apiKey: \"AIzaSyBK9N_gyWYyfoR4sAzHdG3fT6gYKBShzZg\",\n      authDomain: \"simple-messenger-app-jn31.firebaseapp.com\",\n      databaseURL: \"https://simple-messenger-app-jn31.firebaseio.com\",\n      projectId: \"simple-messenger-app-jn31\",\n      storageBucket: \"simple-messenger-app-jn31.appspot.com\",\n      messagingSenderId: \"431275063574\",\n      appId: \"1:431275063574:web:122d40eb61b9180033b837\"\n    };\n    firebase.initializeApp(firebaseConfig);\n\n    this.getMessagesFromFirebase();\n  }\n\n  sendMessageOnClick(event) {\n    event.preventDefault();\n    if(this.state.text.length > 0) {\n      this.sendMessageToFirebase(this.state.text);\n      this.setState({ text: \"\" })\n    }\n  }\n\n  sendMessageToFirebase(message) {\n    firebase.database().ref(\"messages/\").push({ text: message });\n  }\n\n  getMessagesFromFirebase() {\n    // debugger\n    let messagesDB = firebase.database().ref(\"messages/\");\n    messagesDB.on(\"value\", (snapshot) => {\n      console.log(\"did I even get in here??? \", snapshot.val());\n      let snapshotValues = snapshot.val();\n      console.log(\"Snapshot values?? \", snapshotValues);\n      let snapshotValuesArray = Object.entries(snapshotValues);\n      console.log(\"Am I an array now?? \", snapshotValuesArray);\n\n      let newMessages = []\n      snapshotValuesArray.forEach(child => {\n        console.log(\"what is my child??? \", child[1]);\n        var message = \"\"\n        newMessages.push({ id: child.key, text: message.text })\n      })\n      this.setState({ messages: newMessages }, () => {\n        this.setState({ loading: false })\n      })\n    })\n  }\n\n  renderMessages() {\n      this.state.messages.map((message) => {\n        return(\n          <li>{message.text}</li>\n        )\n      })\n  }\n\n  render() {\n\n    if(this.state.loading) {\n      return(\n        <div>I am loading</div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <ul>\n          {this.renderMessages}\n        </ul>\n        <input\n          autoFocus={true}\n          multiline={true}\n          fullWidth={true}\n          rowsMax={3}\n          placeholder=\"say something...\"\n          onChange={(event) => this.setState({ text: event.target.value})}\n          value={this.state.text}\n          onKeyPress={this.submit}\n          type=\"text\"\n         />\n         <button onClick={this.sendMessageOnClick}>SEND</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}