{"ast":null,"code":"import _classCallCheck from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/julieneuburger/Desktop/simple-messenger-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/julieneuburger/Desktop/simple-messenger-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport firebase from 'firebase';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      text: '',\n      messages: [],\n      loading: true\n    };\n    _this.sendMessageOnClick = _this.sendMessageOnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderAllMessages = _this.renderAllMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderOneMessage = _this.renderOneMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var firebaseConfig = {\n        apiKey: \"AIzaSyBK9N_gyWYyfoR4sAzHdG3fT6gYKBShzZg\",\n        authDomain: \"simple-messenger-app-jn31.firebaseapp.com\",\n        databaseURL: \"https://simple-messenger-app-jn31.firebaseio.com\",\n        projectId: \"simple-messenger-app-jn31\",\n        storageBucket: \"simple-messenger-app-jn31.appspot.com\",\n        messagingSenderId: \"431275063574\",\n        appId: \"1:431275063574:web:122d40eb61b9180033b837\"\n      };\n      firebase.initializeApp(firebaseConfig);\n      this.getMessagesFromFirebase();\n    }\n  }, {\n    key: \"sendMessageOnClick\",\n    value: function sendMessageOnClick(event) {\n      event.preventDefault();\n\n      if (this.state.text.length > 0) {\n        this.sendMessageToFirebase(this.state.text);\n        this.setState({\n          text: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"sendMessageToFirebase\",\n    value: function sendMessageToFirebase(message) {\n      firebase.database().ref(\"messages/\").push({\n        text: message\n      });\n    }\n  }, {\n    key: \"getMessagesFromFirebase\",\n    value: function getMessagesFromFirebase() {\n      var _this2 = this;\n\n      var messagesDB = firebase.database().ref(\"messages/\");\n      messagesDB.on(\"value\", function (snapshot) {\n        var snapshotValues = snapshot.val();\n        var snapshotValuesArray = Object.entries(snapshotValues);\n        var newMessages = [];\n        snapshotValuesArray.forEach(function (child) {\n          newMessages.push({\n            id: child.key,\n            text: child[1].text\n          });\n        });\n\n        _this2.setState({\n          messages: newMessages\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"I am loading\");\n      }\n\n      if (this.state.messages) {\n        var allMessages = this.state.messages.map(function (message) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, message.text);\n        });\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, allMessages), React.createElement(\"input\", {\n          autoFocus: true,\n          multiline: true,\n          fullWidth: true,\n          rowsMax: 3,\n          placeholder: \"say something...\",\n          onChange: function onChange(event) {\n            return _this3.setState({\n              text: event.target.value\n            });\n          },\n          value: this.state.text,\n          onKeyPress: this.submit,\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.sendMessageOnClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"SEND\"));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/julieneuburger/Desktop/simple-messenger-app/src/App.js"],"names":["React","Component","firebase","App","props","state","text","messages","loading","sendMessageOnClick","bind","renderAllMessages","renderOneMessage","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","getMessagesFromFirebase","event","preventDefault","length","sendMessageToFirebase","setState","message","database","ref","push","messagesDB","on","snapshot","snapshotValues","val","snapshotValuesArray","Object","entries","newMessages","forEach","child","id","key","allMessages","map","target","value","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport firebase from 'firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: '',\n      messages: [],\n      loading: true\n    }\n\n    this.sendMessageOnClick = this.sendMessageOnClick.bind(this);\n    this.renderAllMessages = this.renderAllMessages.bind(this);\n    this.renderOneMessage = this.renderOneMessage.bind(this);\n  }\n\n  componentDidMount() {\n    var firebaseConfig = {\n      apiKey: \"AIzaSyBK9N_gyWYyfoR4sAzHdG3fT6gYKBShzZg\",\n      authDomain: \"simple-messenger-app-jn31.firebaseapp.com\",\n      databaseURL: \"https://simple-messenger-app-jn31.firebaseio.com\",\n      projectId: \"simple-messenger-app-jn31\",\n      storageBucket: \"simple-messenger-app-jn31.appspot.com\",\n      messagingSenderId: \"431275063574\",\n      appId: \"1:431275063574:web:122d40eb61b9180033b837\"\n    };\n    firebase.initializeApp(firebaseConfig);\n\n    this.getMessagesFromFirebase();\n  }\n\n  sendMessageOnClick(event) {\n    event.preventDefault();\n    if(this.state.text.length > 0) {\n      this.sendMessageToFirebase(this.state.text);\n      this.setState({ text: \"\" })\n    }\n  }\n\n  sendMessageToFirebase(message) {\n    firebase.database().ref(\"messages/\").push({ text: message });\n  }\n\n  getMessagesFromFirebase() {\n    let messagesDB = firebase.database().ref(\"messages/\");\n    messagesDB.on(\"value\", (snapshot) => {\n      let snapshotValues = snapshot.val();\n      let snapshotValuesArray = Object.entries(snapshotValues);\n      let newMessages = []\n\n      snapshotValuesArray.forEach(child => {\n        newMessages.push({ id: child.key, text: child[1].text })\n      })\n      this.setState({ messages: newMessages });\n    })\n  }\n\n  render() {\n\n    if(this.state.loading) {\n      return(\n        <div>I am loading</div>\n      )\n    }\n\n    if(this.state.messages) {\n      const allMessages = this.state.messages.map(message => <div>{message.text}</div>);\n      return (\n        <div>\n          <div>\n            {allMessages}\n          </div>\n          <input\n            autoFocus={true}\n            multiline={true}\n            fullWidth={true}\n            rowsMax={3}\n            placeholder=\"say something...\"\n            onChange={(event) => this.setState({ text: event.target.value})}\n            value={this.state.text}\n            onKeyPress={this.submit}\n            type=\"text\"\n           />\n           <button onClick={this.sendMessageOnClick}>SEND</button>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}